self.epsilon = 0.1
self.alpha = 0.2
self.gamma = 0.9
self.actions = [None, 'forward', 'left', 'right']
self.q = {}
self.defaultq = 0.0

SUCCESS: 10/100

((python2.7)) jessica@Bourbaki:~/Dropbox/data-science/ml-nd/smartcab$ python smartcab/agent.py 
2016-09-19 19:48:51.916 python[48771:16919169] 19:48:51.916 WARNING:  140: This application, or a library it uses, is using the deprecated Carbon Component Manager for hosting Audio Units. Support for this will be removed in a future release. Also, this makes the host incompatible with version 3 audio units. Please transition to the API's in AudioComponent.h.
Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
q:  {}
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
random
action:  right
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', Nuone, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 1
Environment.reset(): Trial set up with start = (2, 5), destination = (5, 4), deadline = 20
RoutePlanner.route_to(): destination = (5, 4)
q:  {"(['green', None, None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 2
Environment.reset(): Trial set up with start = (2, 1), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
q:  {"(['red', None, None, None, 'possible'], 'forward')": -0.2, "(['green', None, None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, 'forward', 'possible']
random
action:  forward
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 3
Environment.reset(): Trial set up with start = (1, 6), destination = (8, 4), deadline = 45
RoutePlanner.route_to(): destination = (8, 4)
q:  {"(['red', None, None, None, 'possible'], 'forward')": -0.2, "(['green', None, None, None, 'possible'], None)": 0.12170880000000002, "(['green', None, None, None, 'possible'], 'right')": 1.9982513795003838, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.4965361671266266, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 2.2304236387437015}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 4
Environment.reset(): Trial set up with start = (3, 2), destination = (7, 4), deadline = 30
RoutePlanner.route_to(): destination = (7, 4)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.11302803520705257, "(['green', None, None, None, 'possible'], None)": 0.12170880000000002, "(['green', None, None, None, 'possible'], 'right')": 3.8305107821787336, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 0.3311085956130976, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.8623361968389528, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 3.4222377409236495}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 5
Environment.reset(): Trial set up with start = (1, 6), destination = (4, 2), deadline = 35
RoutePlanner.route_to(): destination = (4, 2)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.5661051656645739, "(['green', None, None, None, 'possible'], None)": 0.7868589807921722, "(['green', None, None, None, 'possible'], 'right')": 4.149007740950564, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 0.3311085956130976, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.8623361968389528, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 3.677823565798665}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, 'forward', 'possible']
action:  None
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 6
Environment.reset(): Trial set up with start = (5, 6), destination = (5, 1), deadline = 25
RoutePlanner.route_to(): destination = (5, 1)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.988282711344681, "(['green', None, None, None, 'possible'], None)": 0.7868589807921722, "(['green', None, None, None, 'possible'], 'right')": 4.966630294699182, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 0.3311085956130976, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.8623361968389528, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 5.217794981611931}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 7
Environment.reset(): Trial set up with start = (5, 4), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.988282711344681, "(['green', None, None, None, 'possible'], None)": 0.7868589807921722, "(['green', None, None, None, 'possible'], 'right')": 5.071951735029095, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 0.3311085956130976, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.8623361968389528, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 5.217794981611931}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, 'forward', 'possible']
action:  None
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 8
Environment.reset(): Trial set up with start = (1, 6), destination = (7, 3), deadline = 45
RoutePlanner.route_to(): destination = (7, 3)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.988282711344681, "(['green', None, None, None, 'possible'], None)": 1.6408064824407953, "(['green', None, None, None, 'possible'], 'right')": 5.886506364513418, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 0.3311085956130976, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 0.8623361968389528, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 5.678451153969825}
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 9
Environment.reset(): Trial set up with start = (1, 6), destination = (2, 3), deadline = 20
RoutePlanner.route_to(): destination = (2, 3)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.9771700771967514, "(['green', None, None, None, 'possible'], None)": 1.57583054573614, "(['green', None, None, None, 'possible'], 'right')": 1.4897939211619167, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 0.9651475183055132, "(['red', None, None, None, 'possible'], 'left')": 0.16081302995858637, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 1.0254657268305771, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, None, 'possible'], 'right')": 1.8644264964411927}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, 'right', 'possible']
action:  None
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'left', None, 'possible']
action:  None
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 10
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 0.9771700771967514, "(['green', None, None, None, 'possible'], None)": 1.3959374824731192, "(['green', None, None, None, 'possible'], 'right')": 1.9845061221924567, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 1.0824316624400252, "(['red', None, None, None, 'possible'], 'left')": 0.16081302995858637, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 1.0254657268305771, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.633929860220568}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
random
action:  left
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
random
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
random
action:  left
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', 'left', None, None, 'possible']
action:  None
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 11
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 2), deadline = 35
RoutePlanner.route_to(): destination = (5, 2)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 1.0007957212637626, "(['green', None, None, None, 'possible'], None)": 1.477853153854768, "(['green', None, None, None, 'possible'], 'right')": 2.73904776869426, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.40065073519823335, "(['green', None, None, None, 'possible'], 'forward')": 1.2526980212127619, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 0.16081302995858637, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 1.0254657268305771, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 0.8975928426787232, "(['red', None, None, None, 'possible'], 'right')": 3.3799348174426767}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 12
Environment.reset(): Trial set up with start = (3, 6), destination = (1, 3), deadline = 25
RoutePlanner.route_to(): destination = (1, 3)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 1.0007957212637626, "(['green', None, None, None, 'possible'], None)": 1.477853153854768, "(['green', None, None, None, 'possible'], 'right')": 4.456093572636473, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.9508617847470451, "(['green', None, None, None, 'possible'], 'forward')": 1.5588784800922326, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 0.6686907608500016, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 1.0254657268305771, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 0.8975928426787232, "(['red', None, None, None, 'possible'], 'right')": 4.703986993551068}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 13
Environment.reset(): Trial set up with start = (7, 6), destination = (3, 3), deadline = 35
RoutePlanner.route_to(): destination = (3, 3)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 1.0007957212637626, "(['green', None, None, None, 'possible'], None)": 1.477853153854768, "(['green', None, None, None, 'possible'], 'right')": 4.562181333900981, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.9508617847470451, "(['green', None, None, None, 'possible'], 'forward')": 1.5588784800922326, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 1.1912523830918986, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 1.8124045105876456, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 0.8975928426787232, "(['red', None, None, None, 'possible'], 'right')": 4.884039497665802}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 14
Environment.reset(): Trial set up with start = (3, 6), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 1.0007957212637626, "(['green', None, None, None, 'possible'], None)": 2.0685126112954704, "(['green', None, None, None, 'possible'], 'right')": 5.115941068499571, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.9508617847470451, "(['green', None, None, None, 'possible'], 'forward')": 1.5588784800922326, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 1.1912523830918986, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 2.59935681744053, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 0.8975928426787232, "(['red', None, None, None, 'possible'], 'right')": 3.9871093609264836}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 15
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 4), deadline = 40
RoutePlanner.route_to(): destination = (8, 4)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 1.458653940644342, "(['green', None, None, None, 'possible'], None)": 2.0685126112954704, "(['green', None, None, None, 'possible'], 'right')": 5.250128767152807, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.9508617847470451, "(['green', None, None, None, 'possible'], 'forward')": 3.732086784536609, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 1.6637555148402252, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 2.937502817585756, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 0.8975928426787232, "(['red', None, None, None, 'possible'], 'right')": 4.794588641601957}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 16
Environment.reset(): Trial set up with start = (1, 3), destination = (8, 5), deadline = 45
RoutePlanner.route_to(): destination = (8, 5)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 1.458653940644342, "(['green', None, None, None, 'possible'], None)": 2.0685126112954704, "(['green', None, None, None, 'possible'], 'right')": 5.934293865222027, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 0.9508617847470451, "(['green', None, None, None, 'possible'], 'forward')": 3.732086784536609, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 2.0569736557337164, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 0.8975928426787232, "(['red', None, None, None, 'possible'], 'right')": 5.336888547405623}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 17
Environment.reset(): Trial set up with start = (5, 5), destination = (2, 6), deadline = 20
RoutePlanner.route_to(): destination = (2, 6)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 2.4227582045215534, "(['green', None, None, None, 'possible'], None)": 3.218136144939088, "(['green', None, None, None, 'possible'], 'right')": 4.86031470766642, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 2.0354199574680245, "(['green', None, None, None, 'possible'], 'forward')": 3.732086784536609, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 2.0569736557337164, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.0836258187008463, "(['red', None, None, None, 'possible'], 'right')": 5.118911779528942}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, 'forward', 'possible']
action:  None
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 18
Environment.reset(): Trial set up with start = (5, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], None)": 3.530268475735869, "(['green', None, None, None, 'possible'], 'right')": 5.309775332136656, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 2.0354199574680245, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 2.4162941018308692, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.0836258187008463, "(['red', None, None, None, 'possible'], 'right')": 5.392862095799422}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'left', None, 'possible']
action:  None
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'left', None, 'possible']
action:  None
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 19
Environment.reset(): Trial set up with start = (7, 1), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], None)": 3.530268475735869, "(['green', None, None, None, 'possible'], 'right')": 5.006396064641602, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 2.536980334563326, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 2.6804105732551147, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.0836258187008463, "(['red', None, None, None, 'possible'], 'right')": 5.263196065502328}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 20
Environment.reset(): Trial set up with start = (6, 4), destination = (4, 2), deadline = 20
RoutePlanner.route_to(): destination = (4, 2)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], None)": 3.530268475735869, "(['green', None, None, None, 'possible'], 'right')": 5.3524921435037, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 2.536980334563326, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 2.6804105732551147, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.0836258187008463, "(['red', None, None, None, 'possible'], 'right')": 5.263196065502328}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 21
Environment.reset(): Trial set up with start = (7, 2), destination = (1, 2), deadline = 30
RoutePlanner.route_to(): destination = (1, 2)
q:  {"(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], None)": 3.827150108814574, "(['green', None, None, None, 'possible'], 'right')": 5.526326767493362, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, None, 'possible'], 'left')": 2.536980334563326, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.0836258187008463, "(['red', None, None, None, 'possible'], 'right')": 5.749201235117987}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'left', None, 'possible']
action:  None
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'left', None, 'possible']
action:  None
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 22
Environment.reset(): Trial set up with start = (8, 6), destination = (2, 6), deadline = 30
RoutePlanner.route_to(): destination = (2, 6)
q:  {"(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.8787310734983422, "(['green', None, None, None, 'possible'], None)": 3.827150108814574, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.0836258187008463, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.937685852237033, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], 'right')": 5.267707670427608, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.2759714979301413, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'left', None, None, 'possible']
random
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, 'left', None, 'possible']
action:  None
state2:  ['red', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, 'forward', None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': 'forward', 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 23
Environment.reset(): Trial set up with start = (5, 4), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
q:  {"(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.8787310734983422, "(['green', None, None, None, 'possible'], None)": 3.827150108814574, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.635684108363343, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.9149850632693095, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], 'right')": 4.92978517435425, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.6781158359662225, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'forward', None, 'possible']
action:  None
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'forward', None, 'possible']
action:  None
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'forward', None, 'possible']
action:  None
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'forward', None, 'possible']
action:  None
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'forward', None, 'possible']
action:  None
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 24
Environment.reset(): Trial set up with start = (8, 4), destination = (1, 1), deadline = 50
RoutePlanner.route_to(): destination = (1, 1)
q:  {"(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.086338889076547, "(['green', None, None, None, 'possible'], None)": 3.827150108814574, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.635684108363343, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.672323217393001, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], 'right')": 6.300835458196801, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.706029932089622, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.6781158359662225, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 50, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 49, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 48, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 47, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 46, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 25
Environment.reset(): Trial set up with start = (5, 6), destination = (5, 2), deadline = 20
RoutePlanner.route_to(): destination = (5, 2)
q:  {"(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.0579581308478616, "(['green', None, None, None, 'possible'], None)": 3.8062994846526297, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.9835646765548196, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.959944291759337, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.601518430856469, "(['green', None, None, None, 'possible'], 'right')": 4.826510554391619, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.5926574158737887, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.6781158359662225, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 26
Environment.reset(): Trial set up with start = (2, 1), destination = (2, 5), deadline = 20
RoutePlanner.route_to(): destination = (2, 5)
q:  {"(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2619776693641995, "(['green', None, None, None, 'possible'], None)": 3.8062994846526297, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.9835646765548196, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.755101163084899, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.8751219831167667, "(['green', None, None, None, 'possible'], 'right')": 4.443725251622375, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.5926574158737887, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.6781158359662225, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'right', 'possible']
action:  None
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 27
Environment.reset(): Trial set up with start = (7, 1), destination = (3, 5), deadline = 40
RoutePlanner.route_to(): destination = (3, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2619776693641995, "(['green', None, None, None, 'possible'], None)": 3.8062994846526297, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.9835646765548196, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.78379699029763, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.8751219831167667, "(['green', None, None, None, 'possible'], 'right')": 5.6406602011895135, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.5926574158737887, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.9988967693690336, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, 'right', None, 'possible']
action:  None
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 28
Environment.reset(): Trial set up with start = (4, 1), destination = (7, 3), deadline = 25
RoutePlanner.route_to(): destination = (7, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.482657963390242, "(['green', None, None, None, 'possible'], None)": 3.8062994846526297, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 2.9835646765548196, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.9038725804969636, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": -0.36000000000000004, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.8751219831167667, "(['green', None, None, None, 'possible'], 'right')": 4.277261335226841, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.5926574158737887, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.922906705857772, "(['red', None, None, None, 'possible'], None)": 3.1380011714129465, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, 'right', 'right', 'possible']
action:  None
state2:  ['red', None, 'right', 'right', 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': 'right'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'left', None, None, 'possible']
random
action:  left
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 29
Environment.reset(): Trial set up with start = (1, 1), destination = (6, 1), deadline = 25
RoutePlanner.route_to(): destination = (6, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.482657963390242, "(['green', None, None, None, 'possible'], None)": 3.8062994846526297, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.307842367223577, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.5578540475498595, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.6176195434544316, "(['green', None, None, None, 'possible'], 'right')": 3.929238730682983, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.556137036579798, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.664448571740617, "(['red', None, None, None, 'possible'], None)": 2.6696953614564647, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 30
Environment.reset(): Trial set up with start = (1, 4), destination = (5, 6), deadline = 30
RoutePlanner.route_to(): destination = (5, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.1572978885339915, "(['green', None, None, None, 'possible'], None)": 3.510809452067995, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.307842367223577, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.743819009667038, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.3652671525853433, "(['green', None, None, None, 'possible'], 'right')": 3.705973095616206, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.3850142958482023, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.402815101984711, "(['red', None, None, None, 'possible'], None)": 2.4624419983071357, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 31
Environment.reset(): Trial set up with start = (8, 3), destination = (1, 5), deadline = 45
RoutePlanner.route_to(): destination = (1, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.1572978885339915, "(['green', None, None, None, 'possible'], None)": 3.525385289828682, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.307842367223577, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.336247959642664, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.4958015079067817, "(['green', None, None, None, 'possible'], 'right')": 4.3022387422822215, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.3850142958482023, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.402815101984711, "(['red', None, None, None, 'possible'], None)": 2.4624419983071357, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 32
Environment.reset(): Trial set up with start = (2, 4), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.0776445592702824, "(['green', None, None, None, 'possible'], None)": 3.1229356986047634, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.307842367223577, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.9487229081901507, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.511450397546441, "(['green', None, None, None, 'possible'], 'right')": 3.0199405051499277, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.108011436678562, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.402815101984711, "(['red', None, None, None, 'possible'], None)": 2.566840844713943, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, 'right', None, 'possible']
random
action:  left
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 33
Environment.reset(): Trial set up with start = (2, 5), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.362115647416226, "(['green', None, None, None, 'possible'], None)": 2.771776896617756, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.307842367223577, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.1590168456119785, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.511450397546441, "(['green', None, None, None, 'possible'], 'right')": 2.7538810901873636, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.2000931897447153, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.2578978461470216, "(['red', None, None, None, 'possible'], None)": 2.566840844713943, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'forward', None, 'possible']
action:  None
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'forward', None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 34
Environment.reset(): Trial set up with start = (3, 5), destination = (8, 1), deadline = 45
RoutePlanner.route_to(): destination = (8, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.362115647416226, "(['green', None, None, None, 'possible'], None)": 2.7163413586854013, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.307842367223577, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.561493175178441, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 0.4760167741540488, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.511450397546441, "(['green', None, None, None, 'possible'], 'right')": 3.6282258950331454, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.7297169826902135, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.2578978461470216, "(['red', None, None, None, 'possible'], None)": 2.566840844713943, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'forward', None, None, 'possible']
action:  None
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 35
Environment.reset(): Trial set up with start = (2, 6), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.564851284249568, "(['green', None, None, None, 'possible'], None)": 3.06171533927453, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.2068176721003727, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.088894664852519, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 0.4760167741540488, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.511450397546441, "(['green', None, None, None, 'possible'], 'right')": 4.185315918615733, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.2668620552391285, "(['red', None, None, None, 'possible'], None)": 2.566840844713943, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'forward', None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, 'forward', 'possible']
action:  None
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 36
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 3), deadline = 40
RoutePlanner.route_to(): destination = (2, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2052378927504863, "(['green', None, None, None, 'possible'], None)": 3.244315828586219, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.2068176721003727, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.8803643768138545, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.367037194544593, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.511450397546441, "(['green', None, None, None, 'possible'], 'right')": 4.162535403136971, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.224953581772295, "(['red', None, None, None, 'possible'], None)": 2.639696450992508, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'forward', None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'right', 'possible']
action:  None
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 37
Environment.reset(): Trial set up with start = (8, 5), destination = (5, 2), deadline = 30
RoutePlanner.route_to(): destination = (5, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.9660458254110784, "(['green', None, None, None, 'possible'], None)": 3.115840921774206, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.2068176721003727, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.971413101687415, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.2612213895955127, "(['green', None, None, None, 'possible'], 'right')": 3.7555249037328844, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.224953581772295, "(['red', None, None, None, 'possible'], None)": 2.291587889127346, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'right', 'possible']
action:  None
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 38
Environment.reset(): Trial set up with start = (8, 3), destination = (2, 6), deadline = 45
RoutePlanner.route_to(): destination = (2, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.9660458254110784, "(['green', None, None, None, 'possible'], None)": 2.932604548846509, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.2068176721003727, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.506924738034774, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.2612213895955127, "(['green', None, None, None, 'possible'], 'right')": 2.920900164285264, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.224953581772295, "(['red', None, None, None, 'possible'], None)": 2.291587889127346, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 39
Environment.reset(): Trial set up with start = (3, 1), destination = (4, 4), deadline = 20
RoutePlanner.route_to(): destination = (4, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.6256627008521356, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.2068176721003727, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 1.9520964391462756, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.7756770225675305, "(['green', None, None, None, 'possible'], 'right')": 3.107232517779568, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7276454292608372, "(['red', None, None, None, 'possible'], None)": 1.9571333986048218, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 40
Environment.reset(): Trial set up with start = (7, 5), destination = (2, 2), deadline = 40
RoutePlanner.route_to(): destination = (2, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.6256627008521356, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.2068176721003727, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.10778158139028, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.04904164177986753, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.7756770225675305, "(['green', None, None, None, 'possible'], 'right')": 4.265736258736054, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.5352182306457336, "(['red', None, None, None, 'possible'], None)": 2.191016684180565, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, 'right', None, 'possible']
action:  None
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
random
action:  left
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 41
Environment.reset(): Trial set up with start = (4, 1), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.6256627008521356, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.747093528554281, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.990420428855071, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.41646049440196115, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.0185960148394066, "(['green', None, None, None, 'possible'], 'right')": 4.990646604277032, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.736962840640356, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.8262289813019694, "(['red', None, None, None, 'possible'], None)": 2.191016684180565, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 42
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 6), deadline = 40
RoutePlanner.route_to(): destination = (8, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.0349755997811814, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.747093528554281, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 6.095114287316173, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.41646049440196115, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.3671869755215598, "(['green', None, None, None, 'possible'], 'right')": 5.467444963457616, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.145931931322389, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.3070245847527096, "(['red', None, None, None, 'possible'], None)": 2.191016684180565, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 43
Environment.reset(): Trial set up with start = (1, 1), destination = (8, 6), deadline = 60
RoutePlanner.route_to(): destination = (8, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2946121239028945, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.555015814864685, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.162772284424388, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.41646049440196115, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.3671869755215598, "(['green', None, None, None, 'possible'], 'right')": 4.385799843585814, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.145931931322389, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.612251311880117, "(['red', None, None, None, 'possible'], None)": 2.191016684180565, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 60, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 59, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 58, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 57, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 56, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 55, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 54, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 53, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 52, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 51, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 50, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 49, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 48, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 47, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 46, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 44
Environment.reset(): Trial set up with start = (8, 1), destination = (2, 1), deadline = 30
RoutePlanner.route_to(): destination = (2, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.31449180381531, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.555015814864685, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.542593070960722, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.41646049440196115, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.5535282250586624, "(['green', None, None, None, 'possible'], 'right')": 3.652793027217635, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.9337792621638297, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.8284274456586043, "(['red', None, None, None, 'possible'], None)": 2.6125919919858664, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 45
Environment.reset(): Trial set up with start = (8, 2), destination = (7, 5), deadline = 20
RoutePlanner.route_to(): destination = (7, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.31449180381531, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.555015814864685, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.409007046300815, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.41646049440196115, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.5535282250586624, "(['green', None, None, None, 'possible'], 'right')": 3.479737166673283, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.3330896539226025, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.8284274456586043, "(['red', None, None, None, 'possible'], None)": 2.744455271570911, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 46
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 4), deadline = 30
RoutePlanner.route_to(): destination = (1, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.1482019677390043, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.555015814864685, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.806831138509467, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.41646049440196115, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.5535282250586624, "(['green', None, None, None, 'possible'], 'right')": 4.003599064515253, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.180092991472229, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.8284274456586043, "(['red', None, None, None, 'possible'], None)": 2.7758507663676624, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'forward', None, None, 'possible']
action:  None
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'left', None, None, 'possible']
random
action:  left
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 47
Environment.reset(): Trial set up with start = (6, 5), destination = (1, 2), deadline = 40
RoutePlanner.route_to(): destination = (1, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.210771213362202, "(['green', None, None, None, 'possible'], None)": 2.717139191392069, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.259165672342993, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.925583897914157, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.5535282250586624, "(['green', None, None, None, 'possible'], 'right')": 4.6963098625864035, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.258059173248876, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.8284274456586043, "(['red', None, None, None, 'possible'], None)": 2.880885582900593, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
random
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 48
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.3589492581389804, "(['green', None, None, None, 'possible'], None)": 3.0640436405628737, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.129196299352201, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.069001416749194, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.6438469047843385, "(['green', None, None, None, 'possible'], 'right')": 4.728657433041565, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.258059173248876, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.863766281264292, "(['red', None, None, None, 'possible'], None)": 3.114610007792905, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 49
Environment.reset(): Trial set up with start = (7, 6), destination = (2, 6), deadline = 25
RoutePlanner.route_to(): destination = (2, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 4.015903189364685, "(['green', None, None, None, 'possible'], None)": 3.0640436405628737, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.129196299352201, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.294243736389741, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.6438469047843385, "(['green', None, None, None, 'possible'], 'right')": 4.6697568704848145, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.258059173248876, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.863766281264292, "(['red', None, None, None, 'possible'], None)": 3.114610007792905, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 50
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 1), deadline = 20
RoutePlanner.route_to(): destination = (4, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.145344068965495, "(['green', None, None, None, 'possible'], None)": 3.2120838264016993, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.129196299352201, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.701678456443452, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.6438469047843385, "(['green', None, None, None, 'possible'], 'right')": 4.102595578924694, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.258059173248876, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.863766281264292, "(['red', None, None, None, 'possible'], None)": 3.114610007792905, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, 'left', None, 'possible']
action:  None
state2:  ['red', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': 'left', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'left', None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 51
Environment.reset(): Trial set up with start = (4, 4), destination = (8, 1), deadline = 35
RoutePlanner.route_to(): destination = (8, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.145344068965495, "(['green', None, None, None, 'possible'], None)": 3.2120838264016993, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.0865207816403206, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.6438469047843385, "(['green', None, None, None, 'possible'], 'right')": 3.1181334205026197, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.4002563391967016, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.863766281264292, "(['red', None, None, None, 'possible'], None)": 3.114610007792905, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, 'forward', 'possible']
action:  None
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 52
Environment.reset(): Trial set up with start = (8, 1), destination = (3, 2), deadline = 30
RoutePlanner.route_to(): destination = (3, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.949070841037963, "(['green', None, None, None, 'possible'], None)": 2.9034693717494173, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.77826060170477, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.5562184540143225, "(['green', None, None, None, 'possible'], 'right')": 4.45393541415706, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.8554726663603747, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5803905035343684, "(['red', None, None, None, 'possible'], None)": 3.052317807637047, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 53
Environment.reset(): Trial set up with start = (2, 2), destination = (4, 5), deadline = 25
RoutePlanner.route_to(): destination = (4, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.790089424217204, "(['green', None, None, None, 'possible'], None)": 2.8513126784140375, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.848091878317346, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.428884619258886, "(['green', None, None, None, 'possible'], 'right')": 3.0400881406082396, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.8554726663603747, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5803905035343684, "(['red', None, None, None, 'possible'], None)": 2.815360759965418, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'right', None, None, 'possible']
action:  None
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 54
Environment.reset(): Trial set up with start = (3, 1), destination = (1, 5), deadline = 30
RoutePlanner.route_to(): destination = (1, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.70759381770503, "(['green', None, None, None, 'possible'], None)": 2.6836326824218655, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.9319930577702715, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.428884619258886, "(['green', None, None, None, 'possible'], 'right')": 2.7258643556297444, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.698363213033167, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5803905035343684, "(['red', None, None, None, 'possible'], None)": 2.649795024393372, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 55
Environment.reset(): Trial set up with start = (8, 4), destination = (3, 6), deadline = 35
RoutePlanner.route_to(): destination = (3, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.70759381770503, "(['green', None, None, None, 'possible'], None)": 2.6836326824218655, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.662735554370812, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.428884619258886, "(['green', None, None, None, 'possible'], 'right')": 3.4341457238212048, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.698363213033167, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5803905035343684, "(['red', None, None, None, 'possible'], None)": 2.649795024393372, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 56
Environment.reset(): Trial set up with start = (8, 6), destination = (8, 2), deadline = 20
RoutePlanner.route_to(): destination = (8, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.4716270779808487, "(['green', None, None, None, 'possible'], None)": 2.629960028773428, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 1.977750594431885, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.3307520932899783, "(['green', None, None, None, 'possible'], 'right')": 3.2152668705663148, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.489827439791674, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.3364267085172954, "(['red', None, None, None, 'possible'], None)": 2.3473007332102065, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, 'forward', 'possible']
random
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 57
Environment.reset(): Trial set up with start = (7, 1), destination = (1, 3), deadline = 40
RoutePlanner.route_to(): destination = (1, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.4716270779808487, "(['green', None, None, None, 'possible'], None)": 2.4752973394013207, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 1.977750594431885, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.8424543103956954, "(['green', None, None, None, 'possible'], 'right')": 2.4259505755669464, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.1498072851481878, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.8479042108600108, "(['red', None, None, None, 'possible'], None)": 2.0793384701107427, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 58
Environment.reset(): Trial set up with start = (4, 5), destination = (7, 6), deadline = 20
RoutePlanner.route_to(): destination = (7, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.3977408787041368, "(['green', None, None, None, 'possible'], None)": 2.4257913926132946, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.0782997049696044, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.6334228483215407, "(['green', None, None, None, 'possible'], 'right')": 3.7221883103554787, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.4095221785447656, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6526042933079423, "(['red', None, None, None, 'possible'], None)": 1.807739564817786, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 59
Environment.reset(): Trial set up with start = (5, 5), destination = (1, 6), deadline = 25
RoutePlanner.route_to(): destination = (1, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.9729285464197606, "(['green', None, None, None, 'possible'], None)": 2.618010500680196, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.6374213525358408, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.6334228483215407, "(['green', None, None, None, 'possible'], 'right')": 3.897453949290795, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 0.6006600649174327, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.499312443048513, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6526042933079423, "(['red', None, None, None, 'possible'], None)": 2.1178863520669298, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'left', None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, 'left', 'possible']
random
action:  forward
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'left'}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 60
Environment.reset(): Trial set up with start = (2, 1), destination = (4, 3), deadline = 20
RoutePlanner.route_to(): destination = (4, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.0294286576558447, "(['green', None, None, None, 'possible'], None)": 2.618010500680196, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.560807146180201, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.6334228483215407, "(['green', None, None, None, 'possible'], 'right')": 4.220535910996953, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.5488248693327158, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.6204942435581167, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6526042933079423, "(['red', None, None, None, 'possible'], None)": 2.1178863520669298, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 61
Environment.reset(): Trial set up with start = (4, 6), destination = (3, 3), deadline = 20
RoutePlanner.route_to(): destination = (3, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.0294286576558447, "(['green', None, None, None, 'possible'], None)": 2.618010500680196, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.751428812060813, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.6334228483215407, "(['green', None, None, None, 'possible'], 'right')": 4.812437207280566, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.5488248693327158, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.6204942435581167, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6526042933079423, "(['red', None, None, None, 'possible'], None)": 2.1178863520669298, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 62
Environment.reset(): Trial set up with start = (8, 5), destination = (1, 3), deadline = 45
RoutePlanner.route_to(): destination = (1, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.0294286576558447, "(['green', None, None, None, 'possible'], None)": 2.618010500680196, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.8959630219286066, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.982065035489041, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.9859972614264074, "(['green', None, None, None, 'possible'], 'right')": 4.233759098317071, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.5488248693327158, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.6204942435581167, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6526042933079423, "(['red', None, None, None, 'possible'], None)": 2.1178863520669298, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'right', 'possible']
action:  None
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 63
Environment.reset(): Trial set up with start = (3, 1), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.868840084502728, "(['green', None, None, None, 'possible'], None)": 2.691424594396063, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.081199171481091, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.0455965371077007, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.953226563079332, "(['green', None, None, None, 'possible'], 'right')": 2.4765733389980795, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.5488248693327158, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.6204942435581167, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6865121885845598, "(['red', None, None, None, 'possible'], None)": 2.25873783559175, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'forward', None, None, 'possible']
action:  None
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 64
Environment.reset(): Trial set up with start = (6, 3), destination = (2, 2), deadline = 25
RoutePlanner.route_to(): destination = (2, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.5016114134700405, "(['green', None, None, None, 'possible'], None)": 2.5125411181054487, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.081199171481091, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.0666563504870323, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.953226563079332, "(['green', None, None, None, 'possible'], 'right')": 2.4765733389980795, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.5488248693327158, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.566755206787142, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.6865121885845598, "(['red', None, None, None, 'possible'], None)": 2.432662551729305, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
random
action:  left
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 65
Environment.reset(): Trial set up with start = (8, 1), destination = (4, 5), deadline = 40
RoutePlanner.route_to(): destination = (4, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.5016114134700405, "(['green', None, None, None, 'possible'], None)": 2.518269594490439, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.081199171481091, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.6379408194443275, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.6920953434621682, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.9730013860266529, "(['green', None, None, None, 'possible'], 'right')": 2.5988969500468895, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.5488248693327158, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.9923287159256136, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7596298864308353, "(['red', None, None, None, 'possible'], None)": 2.432662551729305, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'forward', None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'left', None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, 'right', 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'right'}, action = forward, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 66
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 5), deadline = 55
RoutePlanner.route_to(): destination = (1, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.5016114134700405, "(['green', None, None, None, 'possible'], None)": 2.518269594490439, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.750197781373379, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.8708785345542374, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.9730013860266529, "(['green', None, None, None, 'possible'], 'right')": 3.2548496123303177, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.814095496113381, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.1414650610893986, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7596298864308353, "(['green', None, None, 'right', 'possible'], 'forward')": 0.5750356006472083, "(['red', None, None, None, 'possible'], None)": 2.432662551729305, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 55, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 54, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 53, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 52, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 51, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 50, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 49, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 48, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'left', None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 47, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 46, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 67
Environment.reset(): Trial set up with start = (1, 5), destination = (8, 1), deadline = 55
RoutePlanner.route_to(): destination = (8, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.5016114134700405, "(['green', None, None, None, 'possible'], None)": 2.8005382292934446, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.084338710510572, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.8708785345542374, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 1.9730013860266529, "(['green', None, None, None, 'possible'], 'right')": 3.809865773659331, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.761217865619234, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7596298864308353, "(['green', None, None, 'right', 'possible'], 'forward')": 0.5750356006472083, "(['red', None, None, None, 'possible'], None)": 2.876379255714267, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 55, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 54, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 53, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 52, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 51, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 50, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 49, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 48, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 47, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 46, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 68
Environment.reset(): Trial set up with start = (3, 5), destination = (7, 2), deadline = 35
RoutePlanner.route_to(): destination = (7, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7382066960848617, "(['green', None, None, None, 'possible'], None)": 2.8005382292934446, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.1925111346342, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 1.8708785345542374, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.200299537444457, "(['green', None, None, None, 'possible'], 'right')": 4.951975311151633, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.806497520138356, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7596298864308353, "(['green', None, None, 'right', 'possible'], 'forward')": 0.5750356006472083, "(['red', None, None, None, 'possible'], None)": 2.9502321350813543, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'forward', None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 69
Environment.reset(): Trial set up with start = (8, 3), destination = (4, 4), deadline = 25
RoutePlanner.route_to(): destination = (4, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.1111217069199246, "(['green', None, None, None, 'possible'], None)": 2.882222742252108, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.8919797225113077, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.200299537444457, "(['green', None, None, None, 'possible'], 'right')": 2.926870257634197, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.9080656236804368, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7281248577730193, "(['green', None, None, 'right', 'possible'], 'forward')": 0.5750356006472083, "(['red', None, None, None, 'possible'], None)": 2.833402942532133, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 70
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 6), deadline = 30
RoutePlanner.route_to(): destination = (6, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 2.8117011380384143, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 2.8784455108086098, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.200299537444457, "(['green', None, None, None, 'possible'], 'right')": 3.2062990845996264, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.273504480501162, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7281248577730193, "(['green', None, None, 'right', 'possible'], 'forward')": 0.5750356006472083, "(['red', None, None, None, 'possible'], None)": 2.61344065864195, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, 'right', 'possible']
action:  None
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 71
Environment.reset(): Trial set up with start = (6, 4), destination = (3, 2), deadline = 25
RoutePlanner.route_to(): destination = (3, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 2.8117011380384143, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 3.8755954761879954, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.200299537444457, "(['green', None, None, None, 'possible'], 'right')": 4.071262381506845, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.273504480501162, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7628607617357444, "(['green', None, None, 'right', 'possible'], 'forward')": 0.5750356006472083, "(['red', None, None, None, 'possible'], None)": 2.61344065864195, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'right', 'possible']
action:  forward
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'right'}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 72
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 3), deadline = 30
RoutePlanner.route_to(): destination = (1, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 2.8117011380384143, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.833442133057639, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 4.455222665883706, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.200299537444457, "(['green', None, None, None, 'possible'], 'right')": 4.496362100496333, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.273504480501162, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7628607617357444, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.61344065864195, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, 'right', None, 'possible']
action:  None
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 73
Environment.reset(): Trial set up with start = (6, 3), destination = (4, 5), deadline = 20
RoutePlanner.route_to(): destination = (4, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 2.8117011380384143, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.289108197730227, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.200299537444457, "(['green', None, None, None, 'possible'], 'right')": 5.180691294315823, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.1697583490514196, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 1.7628607617357444, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.61344065864195, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 74
Environment.reset(): Trial set up with start = (2, 2), destination = (3, 6), deadline = 25
RoutePlanner.route_to(): destination = (3, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 2.8117011380384143, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.1329645850051415, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.4841732552564912, "(['green', None, None, None, 'possible'], 'right')": 4.175079613353466, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.1697583490514196, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.134222234689521, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.61344065864195, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 75
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 1), deadline = 40
RoutePlanner.route_to(): destination = (8, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 2.8117011380384143, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 6.359592339395282, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.4841732552564912, "(['green', None, None, None, 'possible'], 'right')": 6.8122056281026016, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 1.905553680842955, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.8141711706354484, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.134222234689521, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.61344065864195, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'left', None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 76
Environment.reset(): Trial set up with start = (1, 5), destination = (7, 5), deadline = 30
RoutePlanner.route_to(): destination = (7, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.7887476737247003, "(['green', None, None, None, 'possible'], None)": 3.519622468179213, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 6.970750667308228, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.9594533572963524, "(['green', None, None, None, 'possible'], 'right')": 6.726898965628696, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.8141711706354484, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.134222234689521, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 3.9727066798040216, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, 'left', 'possible']
action:  None
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 77
Environment.reset(): Trial set up with start = (4, 3), destination = (7, 5), deadline = 25
RoutePlanner.route_to(): destination = (7, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.4622619996366675, "(['green', None, None, None, 'possible'], None)": 3.519622468179213, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 6.233241289755122, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.4542012692808512, "(['green', None, None, None, 'possible'], 'right')": 5.727893142936496, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.688186412984814, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.672048849948896, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 4.3428364060404965, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 78
Environment.reset(): Trial set up with start = (7, 5), destination = (3, 3), deadline = 30
RoutePlanner.route_to(): destination = (3, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.4622619996366675, "(['green', None, None, None, 'possible'], None)": 3.519622468179213, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 6.240800056597341, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.727997760513989, "(['green', None, None, None, 'possible'], 'right')": 6.447660241981979, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.8718009720139985, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.4222982655946605, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 4.3428364060404965, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 79
Environment.reset(): Trial set up with start = (6, 2), destination = (2, 4), deadline = 30
RoutePlanner.route_to(): destination = (2, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.4622619996366675, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 5.889522718387907, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.945120316741556, "(['green', None, None, None, 'possible'], 'right')": 6.374222740578375, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.8718009720139985, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.5348777812211316, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 4.411404777830692, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 80
Environment.reset(): Trial set up with start = (5, 3), destination = (1, 6), deadline = 35
RoutePlanner.route_to(): destination = (1, 6)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 4.333152503348989, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'right')": 6.343899709129916, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.945120316741556, "(['green', None, None, None, 'possible'], 'right')": 6.545550765903401, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.8718009720139985, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.7403047348628884, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 4.411404777830692, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
action:  None
state2:  ['green', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['green', None, None, 'forward', 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'forward'}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 81
Environment.reset(): Trial set up with start = (1, 2), destination = (4, 5), deadline = 30
RoutePlanner.route_to(): destination = (4, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 4.333152503348989, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 6.080758166694469, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.945120316741556, "(['green', None, None, None, 'possible'], 'right')": 6.101906831926955, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.8718009720139985, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.7403047348628884, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 4.605714069685742, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, 'right', None, 'possible']
action:  None
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 82
Environment.reset(): Trial set up with start = (3, 4), destination = (6, 1), deadline = 30
RoutePlanner.route_to(): destination = (6, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 4.333152503348989, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.9238407772829254, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.76854421528581, "(['green', None, None, None, 'possible'], 'right')": 4.260089792749396, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.363073115188525, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.8468895284952156, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 3.9983379827278576, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 83
Environment.reset(): Trial set up with start = (8, 1), destination = (1, 1), deadline = 35
RoutePlanner.route_to(): destination = (1, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.333285228911585, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.2818272879367147, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.055073770748712, "(['green', None, None, None, 'possible'], 'right')": 4.074887996894408, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.614988286707168, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.2985527031668056, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 3.4016381074891124, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  forward
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 84
Environment.reset(): Trial set up with start = (5, 6), destination = (8, 5), deadline = 20
RoutePlanner.route_to(): destination = (8, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.333285228911585, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.2818272879367147, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 3.055073770748712, "(['green', None, None, None, 'possible'], 'right')": 4.074887996894408, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.614988286707168, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 3.2985527031668056, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 3.4016381074891124, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 85
Environment.reset(): Trial set up with start = (3, 5), destination = (5, 3), deadline = 20
RoutePlanner.route_to(): destination = (5, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.333285228911585, "(['green', None, None, None, 'possible'], None)": 3.963058067847478, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.7470453636090877, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.793972295333738, "(['green', None, None, None, 'possible'], 'right')": 4.0077743155470085, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 4.069074156743636, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.9530488959763503, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 86
Environment.reset(): Trial set up with start = (3, 2), destination = (8, 5), deadline = 40
RoutePlanner.route_to(): destination = (8, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2990615313431224, "(['green', None, None, None, 'possible'], None)": 3.8061209683607182, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.360507748600973, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 4.097377876865445, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.793972295333738, "(['green', None, None, None, 'possible'], 'right')": 3.7195431182802627, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.829727490844545, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.9530488959763503, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 87
Environment.reset(): Trial set up with start = (8, 6), destination = (5, 4), deadline = 25
RoutePlanner.route_to(): destination = (5, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2990615313431224, "(['green', None, None, None, 'possible'], None)": 3.655398578013634, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.661287663381548, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 4.030593589057872, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.793972295333738, "(['green', None, None, None, 'possible'], 'right')": 3.8642492107963653, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.3639133883881764, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.9530488959763503, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 88
Environment.reset(): Trial set up with start = (5, 1), destination = (1, 4), deadline = 35
RoutePlanner.route_to(): destination = (1, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2990615313431224, "(['green', None, None, None, 'possible'], None)": 3.3041907952596725, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.661287663381548, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 2.6639779530180463, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.5380928494270636, "(['green', None, None, None, 'possible'], 'right')": 3.7428559982101497, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.641304143564612, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.7264238103614917, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', 'forward', None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': 'forward', 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 89
Environment.reset(): Trial set up with start = (3, 1), destination = (8, 3), deadline = 35
RoutePlanner.route_to(): destination = (8, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2990615313431224, "(['green', None, None, None, 'possible'], None)": 3.3041907952596725, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.1099712908530055, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.705926721029421, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.288058383650684, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.331183521176502, "(['green', None, None, None, 'possible'], 'right')": 3.6539564950486785, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.3303716986675838, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.618457427471177, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, 'right', 'possible']
action:  None
state2:  ['red', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'right'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'right', None, None, 'possible']
action:  None
state2:  ['green', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': 'right', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, 'forward', None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': 'forward', 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 90
Environment.reset(): Trial set up with start = (7, 5), destination = (1, 2), deadline = 45
RoutePlanner.route_to(): destination = (1, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.4604186947019353, "(['green', None, None, None, 'possible'], None)": 3.2381069793544794, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.1099712908530055, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 4.73433804344434, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 2.6643721299936955, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.064297358934067, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.618457427471177, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 45, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 44, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 43, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 42, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 41, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  left
state2:  ['red', 'right', None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
Environment.act(): Primary agent has reached destination!
Simulator.run(): Trial 91
Environment.reset(): Trial set up with start = (2, 4), destination = (5, 5), deadline = 20
RoutePlanner.route_to(): destination = (5, 5)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.2075530481636068, "(['green', None, None, None, 'possible'], None)": 3.17334483976739, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.1099712908530055, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 4.293328525581276, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 2.6643721299936955, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.0457357705862376, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5599407488927772, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.618457427471177, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
random
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 92
Environment.reset(): Trial set up with start = (6, 5), destination = (3, 4), deadline = 20
RoutePlanner.route_to(): destination = (3, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.4660424385308857, "(['green', None, None, None, 'possible'], None)": 3.1098779429720427, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.1099712908530055, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.5290969167270556, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 3.3307205036904883, "(['green', None, None, 'left', 'possible'], 'left')": 0.9712020711581304, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.075769383317859, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5253518394047525, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.618457427471177, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 93
Environment.reset(): Trial set up with start = (2, 4), destination = (6, 1), deadline = 35
RoutePlanner.route_to(): destination = (6, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.4660424385308857, "(['green', None, None, None, 'possible'], None)": 3.173092621059864, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 4.1099712908530055, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 4.500778376578018, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 3.947870734008964, "(['green', None, None, 'left', 'possible'], 'left')": 0.9712020711581304, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.075769383317859, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5253518394047525, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.618457427471177, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'right', 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', 'left', None, None, 'possible']
action:  None
state2:  ['green', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': 'left', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', 'left', None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', 'left', None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': 'left', 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 94
Environment.reset(): Trial set up with start = (8, 4), destination = (5, 2), deadline = 25
RoutePlanner.route_to(): destination = (5, 2)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.4660424385308857, "(['green', None, None, None, 'possible'], None)": 3.173092621059864, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.3469554644861885, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.8204155406479523, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 4.376672835695761, "(['green', None, None, 'left', 'possible'], 'left')": 0.9712020711581304, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 3.075769383317859, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5253518394047525, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.748946973311531, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = left, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, 'right', None, 'possible']
action:  None
state2:  ['red', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 95
Environment.reset(): Trial set up with start = (2, 5), destination = (8, 3), deadline = 40
RoutePlanner.route_to(): destination = (8, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.4660424385308857, "(['green', None, None, None, 'possible'], None)": 2.810859922141661, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.3469554644861885, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 2.438501681946808, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 2.8220740138459237, "(['green', None, None, 'left', 'possible'], 'left')": 1.8096346821076084, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.638845753951058, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.827963410895382, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5253518394047525, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.5355411617109267, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 40, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 39, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 38, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 37, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 36, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 35, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 34, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 33, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 32, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 31, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  forward
state2:  ['green', None, 'left', None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, 'left', None, 'possible']
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = forward, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  None
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 96
Environment.reset(): Trial set up with start = (2, 5), destination = (4, 1), deadline = 30
RoutePlanner.route_to(): destination = (4, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.320103411750516, "(['green', None, None, None, 'possible'], None)": 2.8892371611735066, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.3469554644861885, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 3.7890465065144276, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.32644040633361, "(['green', None, None, None, 'possible'], 'right')": 3.669749126698023, "(['green', None, None, 'left', 'possible'], 'left')": 1.8096346821076084, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.6778415844293955, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.7623920590289632, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.2634514785358695, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.4351337317071744, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', 'forward', None, None, 'possible']
action:  None
state2:  ['red', 'forward', None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': 'forward', 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, 'forward', None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 97
Environment.reset(): Trial set up with start = (5, 5), destination = (8, 3), deadline = 25
RoutePlanner.route_to(): destination = (8, 3)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.320103411750516, "(['green', None, None, None, 'possible'], None)": 2.8892371611735066, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.3469554644861885, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 4.6583060593890036, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.391347314821197, "(['green', None, None, None, 'possible'], 'right')": 4.358932251839628, "(['green', None, None, 'left', 'possible'], 'left')": 1.8096346821076084, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.6778415844293955, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.7623920590289632, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.3646004509887337, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 2.4351337317071744, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, 'forward', 'possible']
action:  None
state2:  ['red', None, None, 'forward', 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'forward'}, action = None, reward = 0.0
self.state:['red', None, None, None, 'possible']
random
action:  None
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
random
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
self.state:['green', None, 'right', None, 'possible']
action:  None
state2:  ['green', None, 'right', None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': 'right', 'left': None}, action = None, reward = 0.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 98
Environment.reset(): Trial set up with start = (5, 2), destination = (8, 4), deadline = 25
RoutePlanner.route_to(): destination = (8, 4)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 2.639004230560811, "(['green', None, None, None, 'possible'], None)": 2.8892371611735066, "(['green', None, None, 'left', 'possible'], None)": 0.0, "(['red', 'left', None, None, 'possible'], 'right')": 3.3469554644861885, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 5.067036834924602, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.391347314821197, "(['green', None, None, None, 'possible'], 'right')": 5.073740182232492, "(['green', None, None, 'left', 'possible'], 'left')": 1.8096346821076084, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.6778415844293955, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.7623920590289632, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.3646004509887337, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 3.14905727616767, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, 'left', 'possible']
random
action:  None
state2:  ['green', None, None, 'left', 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = None, reward = 0.0
self.state:['green', None, None, 'left', 'possible']
action:  left
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': 'left'}, action = left, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.
Simulator.run(): Trial 99
Environment.reset(): Trial set up with start = (6, 2), destination = (1, 1), deadline = 30
RoutePlanner.route_to(): destination = (1, 1)
q:  {"(['green', None, None, 'right', 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'left')": 3.423270014735077, "(['green', None, None, None, 'possible'], None)": 2.8892371611735066, "(['green', None, None, 'left', 'possible'], None)": 0.3257342427793695, "(['red', 'left', None, None, 'possible'], 'right')": 3.3469554644861885, "(['green', None, 'left', None, 'possible'], None)": 0.0, "(['green', None, None, 'forward', 'possible'], 'right')": 1.541901947643385, "(['red', None, None, None, 'possible'], 'right')": 5.081914227373403, "(['red', None, 'right', 'right', 'possible'], None)": 0.0, "(['green', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, 'right', None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], 'forward')": -0.1, "(['red', 'left', None, None, 'possible'], 'left')": 0.9530712421972123, "(['green', 'right', None, None, 'possible'], None)": 0.0, "(['red', None, None, 'right', 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], 'left')": 2.9503239125947585, "(['red', None, 'right', None, 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'forward')": 2.4833633197863865, "(['green', None, None, None, 'possible'], 'right')": 4.84808541793615, "(['green', None, None, 'left', 'possible'], 'left')": 2.760980978487935, "(['red', 'right', None, None, 'possible'], None)": 0.0, "(['green', 'left', None, None, 'possible'], 'right')": -0.1, "(['red', None, 'forward', None, 'possible'], 'right')": 0.9646973113884757, "(['green', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, 'forward', 'possible'], 'forward')": -0.2, "(['red', 'left', None, None, 'possible'], None)": 0.0, "(['green', None, 'forward', None, 'possible'], None)": 0.0, "(['green', None, 'left', None, 'possible'], 'forward')": 2.6778415844293955, "(['green', 'forward', None, None, 'possible'], 'forward')": 0.5345960620884033, "(['green', 'forward', None, None, 'possible'], None)": 0.0, "(['green', None, None, None, 'possible'], 'forward')": 2.966740586768504, "(['red', None, None, 'left', 'possible'], 'forward')": -0.2, "(['red', None, None, 'forward', 'possible'], None)": 0.0, "(['red', None, None, None, 'possible'], 'left')": 2.5591079305812943, "(['green', None, None, 'right', 'possible'], 'forward')": 0.3600284805177666, "(['red', None, None, None, 'possible'], None)": 3.14905727616767, "(['red', None, None, 'left', 'possible'], None)": 0.0, "(['red', None, 'left', None, 'possible'], None)": 0.0, "(['red', 'forward', None, None, 'possible'], 'left')": -0.2, "(['green', 'left', None, None, 'possible'], None)": 0.0}
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 30, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 29, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 27, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 25, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 24, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 23, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 22, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 21, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 20, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 19, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
random
action:  forward
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 18, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
self.state:['red', None, None, None, 'possible']
random
action:  left
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 17, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 13, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 12, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 11, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 10, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 8, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 7, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 6, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 5, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 4, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['red', None, None, None, 'possible']
LearningAgent.update(): deadline = 3, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 2, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['green', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 1, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
self.state:['red', None, None, None, 'possible']
action:  right
state2:  ['green', None, None, None, 'possible']
LearningAgent.update(): deadline = 0, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
Environment.step(): Primary agent ran out of time! Trial aborted.